name: test
on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:
env:
  GO111MODULE: "on"
jobs:
  test:
    strategy:
      matrix:
        go-version: [ 1.15.x ]
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Restore vendor
        uses: actions/cache@v1
        with:
          path: vendor
          key: ${{ runner.os }}-go-vendor-${{ hashFiles('**/go.mod') }}
      - name: Restore base test coverage
        uses: actions/cache@v2
        with:
          path: |
            unit-base.txt
          # Use base sha for PR or new commit hash for master/main push in test result key.
          key: ${{ runner.os }}-test-coverage-${{ (github.event.pull_request.base.sha != github.event.after) && github.event.pull_request.base.sha || github.event.after }}
      - name: Populate dependencies
        if: matrix.go-version == '1.15.x' # Use latest Go to populate vendor.
        run: '(test -d vendor && echo vendor found) || go mod vendor'
      - name: Test
        id: test
        run: |
          make test-unit
          go tool cover -func=./unit.coverprofile | grep -v '\t0.0%' | sed -e 's/.go:[0-9]*:\t/.go/g' | sed -e 's/\t\t*/|/g'  > unit.txt
          OUTPUT=$(test -e unit-base.txt && diff unit-base.txt unit.txt || exit 0)
          OUTPUT="${OUTPUT//'%'/'%25'}"
          OUTPUT="${OUTPUT//$'\n'/'%0A'}"
          OUTPUT="${OUTPUT//$'\r'/'%0D'}"
          TOTAL=$(grep 'total:' unit.txt)
          echo "::set-output name=diff::$OUTPUT"
          echo "::set-output name=total::$TOTAL"
      - name: Store base coverage
        if: ${{ github.ref == 'refs/heads/master' }}
        run: cp unit.txt unit-base.txt
      - name: Comment
        if: matrix.go-version == '1.15.x'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          header: test
          message: |
            ### Unit test coverage
            ${{ steps.test.outputs.total }}
            <details>
              <summary>Coverage diff with base branch</summary>

            ${{ steps.test.outputs.diff }}

            </details>
      - name: Upload code coverage
        if: matrix.go-version == '1.15.x'
        uses: codecov/codecov-action@v1
        with:
          file: ./unit.coverprofile
          flags: unittests
